@model IEnumerable<MVC.DTOs.ProductDTO>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Themes/Material/Shared/_Layout.cshtml";
    //var rowCount = 1;
}

<div class="main-panel">
    @* ReSharper disable once Mvc.PartialViewNotResolved *@
    @Html.Partial("_ContentNav")
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-7" id="products">
                    @*<div class="row">*@
                    
                    @* ReSharper disable once Mvc.PartialViewNotResolved *@
                    @Html.Partial("_Products", Model)
                    
                    @*</div>*@
                </div>
                <div class="col-md-5">
                    @* ReSharper disable once Mvc.PartialViewNotResolved *@
                    @Html.Partial("_Receipt")
                    @* ReSharper disable once Mvc.PartialViewNotResolved *@
                    @*@Html.Partial("_NumPad")*@

                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        var ONTARIO_HST = 0.13;
// TODO: where should go this global... for easy maintenance... shuld call client server code that loook into AppSettings? but heavy load up
        

        $(function () {
            var dict = {}; // global to this instance/page

            var updateTotal = function() {
                var $sumList = $("#receipt-tbody .js-sum");
                if ($sumList) {
                    var subTotal = 0.00;
                    $sumList.each(function(index, element) {
                        //console.log($(this));
                        var amount = parseFloat($(this).html().replace('$', ''));
                        subTotal += amount;
                    });
                    if (subTotal > 0.00) {
                        $('#sub-total').html('$' + subTotal.toFixed(2));
                        var taxes = Math.round((subTotal * ONTARIO_HST) * 100) / 100;
                        $('#taxes').html('$' + taxes.toFixed(2));
                        var total = Math.round((subTotal + taxes) * 100) / 100;
                        $('#total').html('$' + total.toFixed(2));
                    } else {

                    }
                }
            }
            updateTotal();

            $("#products").on("click","#add-prod", function() {

                var $parent = $(this).parent();
                var $price = $parent.find('.js-price');
                var $name = $parent.find('.js-name');
                var nameKeyIdText = $name.text().trim().replace(/\s/g, '');
                var $receiptBody = $('#receipt-tbody');

                var refresh = false;

                if (dict[nameKeyIdText]) {
                    dict[nameKeyIdText] = dict[nameKeyIdText] + 1;
                    refresh = true;
                } else {
                    dict[nameKeyIdText] = 1;
                }
                var qty = dict[nameKeyIdText];
                var amount = (parseFloat($price.text().replace('$', '')) * qty);


                if (refresh) {
                    var oldRow = $receiptBody.find('#' + nameKeyIdText);
                    oldRow.remove();
                }

                var row =
                    '<tr id="' + nameKeyIdText + '"><td>' +
                        $name.text() +
                        '</td><td class="text-primary">' +
                        $price.text() +
                        '</td><td>' +
                        qty +
                        '</td><td class="text-primary text-right js-sum">$' +
                        amount.toFixed(2) +
                        '</td></tr>';

                $receiptBody.prepend(row);
                updateTotal();
            });

            var buildHtmlProducts = function (data) {
                var rowCount = 1;
                var html = "";
                if (data.length < 1)
                    return "<h5>No data for this type</h5>";
                $.each(data, function (key, value) {
                    
                    if (rowCount % 3 == 0) {
                        html += '<div class="row">';
                    }

                    html += '<div class="col-lg-4 col-md-4 col-sm-4">';
                    html += '<div class="card card-stats">';
                    html += '<div id="add-prod" class="card-header" data-background-color="orange" style="cursor: pointer;">';
                    html += '<i class="material-icons">add</i>';
                    html += '</div>';
                    html += '<div class="card-content">';
                    html += '<p class="category js-price">';
                    html += '<small>$</small>74.99';
                    html += '</p>';
                    html += '<h5 class="title js-name">';
                    html += value.Name;
                    html += '</h5>';
                    html += '</div>';
                    html += '<div class="card-footer">';
                    html += '<div class="stats">';
                    html += '<i class="material-icons text-danger">warning</i> <a href="#pablo">25% off</a>';
                    html += '</div>';
                    html += '</div>';
                    html += '</div>';
                    html += '</div>';

                    if (rowCount % 3 == 0) {
                        html += '</div>';
                    }

                    rowCount++;
                });
                return html;
            } 

            // _Sidebar, categories => Products
            $('.sidebar-wrapper').on('click', 'li',
                function (e) {
                    e.preventDefault();
                    var $anchor = $(this).find('a').first();
                    console.log($anchor);
                    var id = $anchor.data('id');
                    $.ajax({
                        url: '/tile/sale/' +id,
                        type: "GET",
                        success: function (data) {
                            console.log(data);
                            var $prod = $('#products');
                            $prod.empty();
                            $prod.html(buildHtmlProducts(data));
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.log(jqXHR);
                            console.log(textStatus);
                            console.log(errorThrown);
                        }
                    });
                });
            
        });
    </script>
}
